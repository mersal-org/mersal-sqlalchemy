name: Tests And Linting

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python and create virtual environment
        run: make install

      - name: Install Pre-Commit hooks
        run: uv run pre-commit install

      - name: Load cached Pre-Commit Dependencies
        id: cached-pre-commit-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python and create virtual environment
        run: make install

      - name: Run mypy
        run: uv run mypy

  pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python and create virtual environment
        run: make install

      - name: Run pyright
        run: uv run basedpyright

  # slotscheck:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v5

  #     - name: Set up Python
  #       run: uv python install 3.13

  #     - name: Install dependencies
  #       run: uv sync --all-extras --dev

  #     - name: Run slotscheck
  #       run: uv run slotscheck core/src

  test:
    name: "test (${{ matrix.python-version }}"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-latest"]
    uses: ./.github/workflows/test.yml
    with:
      coverage: false # ${{ matrix.python-version == '3.13' }}
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  build-docs:
    needs:
      - validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python and create virtual environment
        run: make install

      - name: Build docs
        run: uv run make docs

      - name: Check docs links
        run: uv run make docs-linkcheck
